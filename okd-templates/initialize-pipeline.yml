---
apiVersion: v1
kind: Template
metadata:
  annotations:
    description: "Initialization Pipeline template for Spring Boot and Quarkus applications built using an ephemeral Jenkins Pipeline"
    iconClass: icon-jenkins
    openshift.io/display-name: "Initialization for Jenkins Build & Deploy Pipeline for DEV"
    template.openshift.io/bindable: "false"
    tags: "java,spring-boot,quarkus,jenkins-ci,jenkins"
    version: "1.0"
  name: initialize-pipeline-dev
objects:

  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: "initialize-pipeline"
      name: "initialize-pipeline"
    spec:
      failedBuildsHistoryLimit": 2
      successfulBuildsHistoryLimit: 2
      nodeSelector: ~
      runPolicy: Serial
      strategy:
        jenkinsPipelineStrategy:
          jenkinsfile: |-
              pipeline {
                agent any
                stages{
                  stage("Initialize") {
                    steps {
                      script {

                        def namespace = openshift.withCluster() { openshift.withProject() { openshift.project() } }
                        
                        // Kind of hokey, but this gets around our certs being internally signed
                        try {
                          git url: "%%GIT_URL%%", branch: "%%GIT_BRANCH%%", credentialsId: "$namespace-${BUILD_SECRET}"
                        } catch (Exception e) {
                          sh "git config http.sslVerify false"
                          git url: "%%GIT_URL%%", branch: "%%GIT_BRANCH%%", credentialsId: "$namespace-${BUILD_SECRET}"
                        }
                        def jenkinsPipeline = load 'src/org/clg/pipeline/initialize.groovy'
                        def params = ['pipelineCodeGitUrl': '%%GIT_URL%%', 'pipelineCodeGitBranch': '%%GIT_BRANCH%%', 'gitSecret': "${BUILD_SECRET}"]
                        jenkinsPipeline.start(params)
                      }
                    }
                  }
                }
              }
        type: JenkinsPipeline
      triggers: []
parameters:
  - 
    description: "Name of the secret for Git credentials."
    displayName: "Build Secret"
    name: BUILD_SECRET
    required: true
    value: git-secret
    
